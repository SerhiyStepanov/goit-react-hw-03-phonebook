{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Form/Form.module.css","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","onInputChange","e","currentTarget","value","setState","onFormSubmit","preventDefault","props","onSubmit","reset","inputNameId","shortid","generate","inputNumberId","this","className","s","container","htmlFor","label","spanName","type","id","onChange","input","placeholder","ioIosPhonePortrait","button","Component","Filter","inputFilterId","fiSearch","ContactList","contacts","onDeleteContact","map","list","text","onClick","App","filter","addContact","data","some","el","alert","contact","prevState","deleteContact","contactId","filterContacts","visibleContacts","normalizedFilter","toLowerCase","includes","saveStorageContacts","localStorage","getItem","parseStorageContacts","JSON","parse","prevProps","setItem","stringify","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6bc9b99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2aF3X\",\"text\":\"ContactList_text___hURG\",\"button\":\"ContactList_button__2pGMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3u1-a\",\"label\":\"Form_label__2TsCt\",\"button\":\"Form_button__3c1-y\",\"ioIosPhonePortrait\":\"Form_ioIosPhonePortrait__1tbNF\",\"spanName\":\"Form_spanName__3nHLX\",\"input\":\"Form_input__9bVFv\"};","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { IoIosPhonePortrait } from \"react-icons/io\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const inputNameId = shortid.generate();\r\n    const inputNumberId = shortid.generate();\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <div className={s.container}>\r\n            <label htmlFor={inputNameId} className={s.label}>\r\n              Name <span className={s.spanName}>name</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={inputNameId}\r\n              value={this.state.name}\r\n              onChange={this.onInputChange}\r\n              className={s.input}\r\n              placeholder=\"Enter name\"\r\n            />\r\n          </div>\r\n\r\n          <div className={s.container}>\r\n            <label htmlFor={inputNumberId} className={s.label}>\r\n              Number\r\n              <span className={s.ioIosPhonePortrait}>\r\n                <IoIosPhonePortrait />\r\n              </span>\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={inputNumberId}\r\n              value={this.state.number}\r\n              onChange={this.onInputChange}\r\n              className={s.input}\r\n              placeholder=\"Enter number\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  const inputFilterId = shortid.generate();\r\n  return (\r\n    <div className={s.container}>\r\n      <label htmlFor={inputFilterId} className={s.label}>\r\n        Find contacts of name{\" \"}\r\n        <span className={s.fiSearch}>\r\n          <FiSearch />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={inputFilterId}\r\n        className={s.input}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.list}>\r\n          <p className={s.text}>\r\n            {name} : {number}\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n      onDeleteContact: PropTypes.func,\r\n    })\r\n  ),\r\n};\r\n","import { Component, Fragment } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const saveStorageContacts = localStorage.getItem(\"contacts\");\n    const parseStorageContacts = JSON.parse(saveStorageContacts);\n    if (parseStorageContacts) {\n      this.setState({ contacts: parseStorageContacts });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (this.state.contacts !== prevState) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (data) => {\n    const repeatName = this.state.contacts.some((el) => el.name === data.name);\n    if (repeatName) {\n      alert(`${data.name} is alreadi in contacts.`);\n      return;\n    }\n    if (data.name === \"\") {\n      alert(\"Enter  name please\");\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  filterContacts = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  visibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.visibleContacts();\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterContacts} />\n        <ContactList\n          contacts={visibleContact}\n          onDeleteContact={this.deleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3sQAy\",\"label\":\"Filter_label__2WGNr\",\"fiSearch\":\"Filter_fiSearch__ePnVk\",\"input\":\"Filter_input__3c8MG\"};"],"sourceRoot":""}